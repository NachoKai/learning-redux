{"version":3,"sources":["actions/index.js","App.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["custom","number","type","payload","App","counter","useSelector","state","isLogged","dispatch","useDispatch","useState","value","setValue","className","alt","src","onClick","role","aria-label","onChange","event","target","counterReducer","action","loggedReducer","allReducers","combineReducers","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAYaA,EAAS,SAAAC,GACpB,MAAO,CACLC,KAAM,SACNC,QAASF,IC8CEG,MAxDf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACtCC,EAAWC,cAHJ,EAIaC,mBAAS,IAJtB,mBAINC,EAJM,KAICC,EAJD,KAMb,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,SAAd,cAEE,yBACEA,UAAU,OACVC,IAAI,OACJC,IAAI,qDAGR,uCAAaX,GACb,4BAAQY,QAAS,kBAAMR,EAAST,GAAQ,OAAxC,OACA,4BAAQiB,QAAS,kBAAMR,EDhBpB,CACLP,KAAM,gBCeJ,KACA,4BAAQe,QAAS,kBAAMR,EDvBpB,CACLP,KAAM,gBCsBJ,KACA,4BAAQe,QAAS,kBAAMR,EAAST,EAAO,OAAvC,OACA,mDACCQ,GAAsB,UAAVI,EACX,wBAAIE,UAAU,UAAd,YAEE,0BAAMI,KAAK,MAAMC,aAAW,eAA5B,iBAKF,0BAAMD,KAAK,MAAMC,aAAW,eAA5B,gBAIF,2BACE,2BACEjB,KAAK,WACLY,UAAU,WACVF,MAAOA,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAASQ,EAAMC,OAAOV,WAG7C,2BACE,4BAAQK,QAAS,kBAAMR,ED5BtB,CACLP,KAAM,WC2BwCY,UAAU,aAClD,8BAAON,GAAsB,UAAVI,EAAoB,UAAY,UACnD,0BAAMM,KAAK,MAAMC,aAAW,OAA5B,iBAIF,6BACA,yBAAKL,UAAU,YAAf,kB,OC1COS,EAbQ,WAAwB,IAAvBhB,EAAsB,uDAAd,EAAGiB,EAAW,uCAC5C,OAAQA,EAAOtB,MACb,IAAK,YACH,OAAOK,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,IAAK,SACH,OAAOA,EAAQiB,EAAOrB,QACxB,QACE,OAAOI,ICAEkB,EATO,WAA4B,IAA3BlB,EAA0B,wDAAXiB,EAAW,uCAC/C,OAAQA,EAAOtB,MACb,IAAK,QACH,OAAQK,EACV,QACE,OAAOA,ICIEmB,EALKC,YAAgB,CAClCtB,QAASkB,EACTf,SAAUiB,ICENG,EAAQC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.b7468df8.chunk.js","sourcesContent":["export const increment = () => {\n  return {\n    type: 'INCREMENT',\n  };\n};\n\nexport const decrement = () => {\n  return {\n    type: 'DECREMENT',\n  };\n};\n\nexport const custom = number => {\n  return {\n    type: 'CUSTOM',\n    payload: number,\n  };\n};\n\nexport const login = () => {\n  return {\n    type: 'LOGIN',\n  };\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, custom, login } from './actions';\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n  return (\n    <div className='App'>\n      <h1 className='title'>\n        Hello Redux\n        <img\n          className='logo'\n          alt='logo'\n          src='https://cdn.worldvectorlogo.com/logos/redux.svg'\n        />\n      </h1>\n      <h3>Counter {counter}</h3>\n      <button onClick={() => dispatch(custom(-50))}>-50</button>\n      <button onClick={() => dispatch(decrement())}>-</button>\n      <button onClick={() => dispatch(increment())}>+</button>\n      <button onClick={() => dispatch(custom(50))}>+50</button>\n      <h3>Secret Information:</h3>\n      {isLogged && value === 'admin' ? (\n        <h3 className='reveal'>\n          Revealed!\n          <span role='img' aria-label='Opened Lock'>\n            ðŸ”“\n          </span>\n        </h3>\n      ) : (\n        <span role='img' aria-label='Closed Lock'>\n          ðŸ”’\n        </span>\n      )}\n      <p>\n        <input\n          type='password'\n          className='password'\n          value={value}\n          onChange={event => setValue(event.target.value)}\n        />\n      </p>\n      <p>\n        <button onClick={() => dispatch(login())} className='btn-login'>\n          <span>{isLogged && value === 'admin' ? 'Log out' : 'Log in'}</span>\n          <span role='img' aria-label='Key'>\n            ðŸ”‘\n          </span>\n        </button>\n        <br />\n        <del className='pass-msg'>Pass: admin</del>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n    case 'DECREMENT':\n      return state - 1;\n    case 'CUSTOM':\n      return state + action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","const loggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default loggedReducer;\n","import counterReducer from './counter';\nimport loggedReducer from './isLogged';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n  counter: counterReducer,\n  isLogged: loggedReducer,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}